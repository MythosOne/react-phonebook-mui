{"version":3,"file":"static/js/282.ce5e7066.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Modal/DeleteConfirmationModal.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import styled from '@emotion/styled';\nimport { Button, TextField } from '@mui/material';\n\nexport const AddContactForm = styled.form`\n  max-width: 400px;\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  padding: 20px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const StyledTextField = styled(TextField)`\n  & input {\n    font-size: 20px;\n    color: white;\n  }\n\n  & label {\n    font-size: 20px;\n    color: white;\n  }\n\n  /* & label.Mui-focused {\n    color: white;\n    font-weight: 600;\n  } */\n`;\n\nexport const StyledButton = styled(Button)`\n  border-radius: 4px;\n  width: 180px;\n  height: 40px;\n  text-align: center;\n  border: none;\n  font-size: 16px;\n  font-weight: 600;\n  background-color: #3f51b5;\n  color: white;\n  margin: 0 auto;\n\n    &:hover {\n    background-color: #3f51b5;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport {\n  AddContactForm,\n  Container,\n  StyledTextField,\n  StyledButton,\n} from './ContactForm.styled';\nimport { Typography } from '@mui/material';\nimport { AddIcCall } from '@mui/icons-material';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    const name = form.elements.name.value;\n    const phone = form.elements.tel.value;\n\n    const loweredCase = name.toLowerCase().trim();\n    const searchName = contacts.some(\n      cont => cont.name.toLowerCase().trim() === loweredCase\n    );\n\n    if (searchName) {\n      alert(`${name} is already in contacts`);\n    } else if (name.length === 0) {\n      alert('Fields must be filled!');\n    } else {\n      dispatch(\n        addContact({\n          name,\n          phone,\n        })\n      );\n    }\n    form.reset();\n  };\n\n  return (\n    <>\n      <AddContactForm onSubmit={handleSubmit}>\n        <Container>\n          <Typography variant=\"h4\" fontWeight=\"400\" color=\"white\">\n            CONTACTS\n          </Typography>\n          <StyledTextField\n            fullWidth\n            type=\"text\"\n            name=\"name\"\n            label=\"Name\"\n            variant=\"filled\"\n            inputProps={{\n              inputMode: 'text',\n              pattern:\n                '^[a-zA-Zа-яА-Я]+(([\\\\s][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я]*)*$',\n            }}\n            title=\"Name may contain only letters, apostrophe and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <StyledTextField\n            fullWidth\n            type=\"tel\"\n            name=\"tel\"\n            label=\"Number phone\"\n            variant=\"filled\"\n            inputProps={{\n              inputMode: 'tel',\n              pattern: '\\\\d{3}-\\\\d{2}-\\\\d{2}',\n            }}\n            title=\"The phone number must consist of numbers and a dash ###-##-##\"\n            required\n          />\n        </Container>\n        <StyledButton\n          variant=\"contained\"\n          startIcon={<AddIcCall />}\n          type=\"submit\"\n        >\n          Add Contact\n        </StyledButton>\n      </AddContactForm>\n    </>\n  );\n};\n","import PropTypes from 'prop-types';\n\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Button,\n} from '@mui/material';\n\nimport WarningIcon from '@mui/icons-material/Warning';\n\nexport const DeleteConfirmationModal = ({ open, onClose, onConfirm }) => {\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      sx={{\n        '& .MuiPaper-root': {\n          width: '50%',\n          minWidth: '300px',\n          maxWidth: '444px',\n          backgroundColor: 'transparent',\n          border: '1px solid rgb(236, 236, 236)',\n          borderRadius: '10px',\n          padding: '10px',\n          boxShadow: 'rgba(0, 0, 0, 0.45) 0px 25px 20px -20px',\n          backdropFilter: 'blur(10px)',\n        },\n      }}\n    >\n      <DialogTitle\n        id=\"alert-dialog-title\"\n        sx={{\n          fontSize: '20px',\n          padding: '10px 14px',\n          fontWeight: 'bold',\n          color: '#d32f2f',\n          display: 'flex',\n          alignItems: 'center',\n          gap: '10px',\n        }}\n      >\n        <WarningIcon viewBox=\"0 0 24 26\" />\n        Deletion confirmation\n      </DialogTitle>\n      <DialogContent sx={{ padding: '10px 14px' }}>\n        <DialogContentText\n          id=\"alert-dialog-description\"\n          sx={{\n            fontSize: '16px',\n            color: 'white',\n            textShadow: '2px 2px 4px black',\n          }}\n        >\n          Are you sure you want to delete this contact? This action is not\n          allowed cancel.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={onClose}\n          color=\"primary\"\n          sx={{\n            fontSize: '14px',\n            color: 'white',\n            fontWeight: 'bold',\n            textShadow: '2px 2px 4px black',\n            '&:hover': {\n              transform: 'scale(1.05)',\n            },\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          onClick={onConfirm}\n          color=\"error\"\n          sx={{\n            fontSize: '14px',\n            textShadow: '2px 2px 4px black',\n            '&:hover': {\n              color: 'red',\n              fontWeight: 'bold',\n              transform: 'scale(1.05)',\n            },\n          }}\n          autoFocus\n        >\n          Delete\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nDeleteConfirmationModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { Button, Typography } from '@mui/material';\n\nexport const StyledButton = styled(Button)`\n  border-radius: 4px;\n  min-width: 90px;\n  height: 30px;\n  text-align: center;\n  border: none;\n  font-size: 12px;\n  background-color: #3f51b5;\n  color: white;\n  margin: 0 auto;\n\n  &:hover {\n    background-color: #3f51b5;\n  }\n`;\n\nexport const StyledTypography = styled(Typography)`\n  font-size: 18px;\n  color: white;\n  text-shadow: 2px 2px 4px black;\n`;\n\nexport const baseStyles = {\n  transition: 'opacity 300ms ease-out, transform 300ms ease-out',\n};\n\nexport const styles = {\n  container: {\n    opacity: 0,\n    transform: 'translateY(-20px)',\n  },\n  entered: {\n    opacity: 1,\n    transform: 'translateY(0)',\n    ...baseStyles,\n  },\n  exited: {\n    opacity: 0,\n    transform: 'translateY(-20px)',\n    ...baseStyles,\n  },\n};\n","import { useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Transition } from 'react-transition-group';\n\nimport { deleteContact } from 'redux/contacts/operations';\nimport { DeleteConfirmationModal } from '../Modal/DeleteConfirmationModal';\n\nimport { ListItem, ListItemAvatar, Avatar, ListItemText } from '@mui/material';\nimport { AccountCircle, PersonRemove } from '@mui/icons-material';\nimport { StyledButton, StyledTypography } from './ContactItem.styled';\nimport { styles } from './ContactItem.styled';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const nodeRef = useRef(null);\n  const [isShowContact, setIsShowContact] = useState(true);\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n  const handleDelete = contactId => {\n    dispatch(deleteContact(contactId));\n    setIsShowContact(false);\n    setIsOpenModal(false);\n  };\n\n  return (\n    <>\n      <Transition\n        key={contact._id}\n        in={isShowContact}\n        appear={true}\n        timeout={300}\n        nodeRef={nodeRef}\n      >\n        {state => (\n          <ListItem\n            ref={nodeRef}\n            style={{\n              padding: '0 0 8px',\n              ...styles.container,\n              ...(state === 'entered'\n                ? { ...styles.entered }\n                : { ...styles.exited }),\n            }}\n          >\n            <ListItemAvatar>\n              <Avatar sx={{ bgcolor: '#3f51b5' }}>\n                <AccountCircle />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText>\n              <StyledTypography\n                fontSize=\"18px\"\n                color=\"white\"\n                textshadow=\"2px 2px 4px black\"\n              >\n                {`${contact.name} : ${contact.phone}`}\n              </StyledTypography>\n            </ListItemText>\n            {\n              <StyledButton\n                variant=\"outlined\"\n                startIcon={<PersonRemove />}\n                type=\"button\"\n                name=\"delete\"\n                onClick={() => {\n                  setIsOpenModal(true);\n                  // handleDelete(contact._id);\n                }}\n              >\n                Delete\n              </StyledButton>\n            }\n            <DeleteConfirmationModal\n              open={isOpenModal}\n              onClose={() => setIsOpenModal(false)}\n              onConfirm={() => handleDelete(contact._id)}\n            />\n          </ListItem>\n        )}\n      </Transition>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Message = styled.div`\n  padding: 0 20px 20px;\n  text-align: center;\n\n  font-size: 16px;\n  font-weight: 600;\n  color: orange;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport {\n  selectContacts,\n  selectFilter,\n  selectIsLoading,\n} from '../../redux/contacts/selectors';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\n\nimport { Message } from './ContactList.styled';\nimport { List } from '@mui/material';\nimport Pagination from '@mui/material/Pagination';\n\nconst ITEMS_PER_PAGE = 5;\n\nconst filterContacts = (items, filter) => {\n  return items.filter(contacts =>\n    contacts.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nexport const ContactList = () => {\n  const filter = useSelector(selectFilter);\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  const [page, setPage] = useState(1);\n\n  const visibleContacts = filterContacts(contacts, filter);\n\n  const handleChange = (_, value) => {\n    setPage(value);\n  };\n\n  const startIndex = (page - 1) * ITEMS_PER_PAGE;\n  const currentItems = visibleContacts.slice(\n    startIndex,\n    startIndex + ITEMS_PER_PAGE\n  );\n\n  useEffect(() => {\n    if (page > 1 && currentItems.length === 0) {\n      setPage(prev => prev - 1);\n    }\n  }, [currentItems, page]);\n\n  return (\n    <>\n      {!isLoading && contacts.length === 0 ? (\n        <Message>You do not have contacts 😯</Message>\n      ) : (\n        <>\n          <List sx={{ padding: '20px 20px 12px' }}>\n            {currentItems.map(contact => (\n              <ContactItem key={contact._id} contact={contact} />\n            ))}\n          </List>\n          {visibleContacts.length > ITEMS_PER_PAGE && (\n            <Pagination\n              count={Math.ceil(visibleContacts.length / ITEMS_PER_PAGE)}\n              page={page}\n              onChange={handleChange}\n              sx={{\n                display: 'flex',\n                justifyContent: 'center',\n                padding: '5px',\n                '& .MuiPaginationItem-previousNext': { color: '#3f51b5' },\n                '& .MuiPaginationItem-page': { color: '#3f51b5' },\n              }}\n            />\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { TextField } from '@mui/material';\n\nexport const ContainerFilter = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n\n  padding: 20px;\n`;\n\nexport const StyledTextField = styled(TextField)`\n  & input {\n    font-size: 20px;\n    color: white;\n  }\n\n  & label {\n    font-size: 20px;\n    color: white;\n  }\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport { setFilter } from '../../redux/contacts/contactsSlice';\nimport { Typography } from '@mui/material';\nimport {\n  ContainerFilter,\n  StyledTextField\n} from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <ContainerFilter>\n      <Typography variant=\"h5\" fontWeight=\"400\" color=\"white\">\n        Find contacts by name\n      </Typography>\n      <StyledTextField\n        fullWidth\n        type=\"text\"\n        label=\"Enter Name\"\n        variant=\"filled\"\n        value={filter}\n        onChange={event => dispatch(setFilter(event.target.value))}\n      />\n    </ContainerFilter>\n  );\n};\n","import { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Transition } from 'react-transition-group';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '444px',\n    border: '1px solid rgb(236, 236, 236)',\n    borderRadius: '10px',\n    boxShadow: 'rgba(0, 0, 0, 0.45) 0px 25px 20px -20px',\n    backdropFilter: 'blur(10px)',\n    marginBottom: '20px',\n    opacity: 0,\n    transform: 'translateY(-20px)',\n  },\n  entered: {\n    opacity: 1,\n    transform: 'translateY(0)',\n    transition: 'opacity 300ms ease-out, transform 300ms ease-out',\n  },\n  message: {\n    padding: '0 20px 20px',\n    textAlign: 'center',\n    fontSize: '16px',\n    fontWeight: '600',\n    color: 'orange',\n  },\n  section: {\n    minHeight: '60vh',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: '40px',\n  },\n};\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const nodeRef = useRef(null);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <section style={styles.section}>\n      <Transition in={true} appear={true} timeout={300} nodeRef={nodeRef}>\n        {state => (\n          <div\n            ref={nodeRef}\n            style={{\n              ...styles.container,\n              ...(state === 'entered' && { ...styles.entered }),\n            }}\n          >\n            <ContactForm />\n            <Filter />\n            <ContactList />\n            {isLoading && (\n              <div style={styles.message}>Request in progress...👌</div>\n            )}\n          </div>\n        )}\n      </Transition>\n    </section>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","AddContactForm","styled","form","Container","div","StyledTextField","TextField","StyledButton","Button","ContactForm","dispatch","useDispatch","useSelector","onSubmit","event","preventDefault","currentTarget","name","elements","value","phone","tel","loweredCase","toLowerCase","trim","some","cont","alert","length","addContact","reset","Typography","variant","fontWeight","color","fullWidth","type","label","inputProps","inputMode","pattern","title","required","startIcon","AddIcCall","A","DeleteConfirmationModal","open","onClose","onConfirm","Dialog","sx","width","minWidth","maxWidth","backgroundColor","border","borderRadius","padding","boxShadow","backdropFilter","DialogTitle","id","fontSize","display","alignItems","gap","Warning","viewBox","DialogContent","DialogContentText","textShadow","DialogActions","onClick","transform","autoFocus","StyledTypography","baseStyles","transition","styles","container","opacity","entered","exited","ContactItem","contact","nodeRef","useRef","isShowContact","setIsShowContact","useState","isOpenModal","setIsOpenModal","Transition","in","appear","timeout","ListItem","ref","style","ListItemAvatar","Avatar","bgcolor","AccountCircle","ListItemText","textshadow","PersonRemove","handleDelete","contactId","_id","deleteContact","Message","ContactList","page","setPage","visibleContacts","includes","filterContacts","startIndex","currentItems","slice","useEffect","prev","List","map","Pagination","count","Math","ceil","onChange","_","justifyContent","ContainerFilter","Filter","setFilter","target","flexDirection","marginBottom","message","textAlign","section","minHeight","marginTop","fetchContacts"],"sourceRoot":""}