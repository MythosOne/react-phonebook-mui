{"version":3,"file":"static/js/414.6be566fa.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Modal/DeleteConfirmationModal.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n","import styled from '@emotion/styled';\nimport { Button, TextField } from '@mui/material';\n\nexport const AddContactForm = styled.form`\n  max-width: 400px;\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  padding: 20px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const StyledTextField = styled(TextField)`\n  & input {\n    font-size: 20px;\n    color: white;\n  }\n\n  & label {\n    font-size: 20px;\n    color: white;\n  }\n\n  /* & label.Mui-focused {\n    color: white;\n    font-weight: 600;\n  } */\n`;\n\nexport const StyledButton = styled(Button)`\n  border-radius: 4px;\n  width: 180px;\n  height: 40px;\n  text-align: center;\n  border: none;\n  font-size: 16px;\n  font-weight: 600;\n  background-color: #3f51b5;\n  color: white;\n  margin: 0 auto;\n\n    &:hover {\n    background-color: #3f51b5;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport {\n  AddContactForm,\n  Container,\n  StyledTextField,\n  StyledButton,\n} from './ContactForm.styled';\nimport { Typography } from '@mui/material';\nimport { AddIcCall } from '@mui/icons-material';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    const name = form.elements.name.value;\n    const phone = form.elements.tel.value;\n\n    const loweredCase = name.toLowerCase().trim();\n    const searchName = contacts.some(\n      cont => cont.name.toLowerCase().trim() === loweredCase\n    );\n\n    if (searchName) {\n      alert(`${name} is already in contacts`);\n    } else if (name.length === 0) {\n      alert('Fields must be filled!');\n    } else {\n      dispatch(\n        addContact({\n          name,\n          phone,\n        })\n      );\n    }\n    form.reset();\n  };\n\n  return (\n    <>\n      <AddContactForm onSubmit={handleSubmit}>\n        <Container>\n          <Typography variant=\"h4\" fontWeight=\"400\" color=\"white\">\n            CONTACTS\n          </Typography>\n          <StyledTextField\n            fullWidth\n            type=\"text\"\n            name=\"name\"\n            label=\"Name\"\n            variant=\"filled\"\n            inputProps={{\n              inputMode: 'text',\n              pattern:\n                '^[a-zA-Zа-яА-Я]+(([\\\\s][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я]*)*$',\n            }}\n            title=\"Name may contain only letters, apostrophe and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            // required\n          />\n          <StyledTextField\n            fullWidth\n            type=\"tel\"\n            name=\"tel\"\n            label=\"Number phone\"\n            variant=\"filled\"\n            inputProps={{\n              inputMode: 'tel',\n              pattern: '\\\\d{3}-\\\\d{2}-\\\\d{2}',\n            }}\n            title=\"The phone number must consist of numbers and a dash ###-##-##\"\n            // required\n          />\n        </Container>\n        <StyledButton\n          variant=\"contained\"\n          startIcon={<AddIcCall />}\n          type=\"submit\"\n        >\n          Add Contact\n        </StyledButton>\n      </AddContactForm>\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Button,\n} from '@mui/material';\n\nexport const DeleteConfirmationModal = ({ open, onClose, onConfirm }) => {\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      sx={{\n        '& .MuiPaper-root': {\n          width: '90%',\n          maxWidth: '444px',\n          backgroundColor: 'transparent',\n          border: '1px solid rgb(236, 236, 236)',\n          borderRadius: '10px',\n          padding: '10px',\n          boxShadow: 'rgba(0, 0, 0, 0.45) 0px 25px 20px -20px',\n          backdropFilter: 'blur(10px)',\n        },\n      }}\n    >\n      <DialogTitle\n        id=\"alert-dialog-title\"\n        sx={{ fontSize: '20px', fontWeight: 'bold', color: '#d32f2f' }}\n      >\n        Deletion confirmation\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText\n          id=\"alert-dialog-description\"\n          sx={{\n            fontSize: '16px',\n            color: 'white',\n            textShadow: '2px 2px 4px black',\n          }}\n        >\n          Are you sure you want to delete this contact? This action is not\n          allowed cancel.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={onClose}\n          color=\"primary\"\n          sx={{\n            fontSize: '14px',\n            color: 'white',\n            textShadow: '2px 2px 4px black',\n            '&:hover': {\n              transform: 'scale(1.05)',\n            },\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          onClick={onConfirm}\n          color=\"error\"\n          sx={{\n            fontSize: '14px',\n            textShadow: '2px 2px 4px black',\n            '&:hover': {\n              color: 'red',\n              transform: 'scale(1.05)',\n            },\n          }}\n          autoFocus\n        >\n          Delete\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default DeleteConfirmationModal;\n","import styled from \"@emotion/styled\";\nimport { Button, Typography } from '@mui/material';\n\nexport const StyledButton = styled(Button)`\n  border-radius: 4px;\n  min-width: 90px;\n  height: 30px;\n  text-align: center;\n  border: none;\n  font-size: 12px;\n  background-color: #3f51b5;\n  color: white;\n  margin: 0 auto;\n\n  &:hover {\n    background-color: #3f51b5;\n  }\n`;\n\nexport const StyledTypography = styled(Typography)`\n  font-size: 18px;\n  color: white;\n  text-shadow: 2px 2px 4px black;\n`;\n\nexport const baseStyles = {\n  transition: 'opacity 300ms ease-out, transform 300ms ease-out',\n};\n\nexport const styles = {\n  container: {\n    opacity: 0,\n    transform: 'translateY(-20px)',\n  },\n  entered: {\n    opacity: 1,\n    transform: 'translateY(0)',\n    ...baseStyles,\n  },\n  exited: {\n    opacity: 0,\n    transform: 'translateY(-20px)',\n    ...baseStyles,\n  },\n};\n\n","import { useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Transition } from 'react-transition-group';\n\nimport { deleteContact } from 'redux/contacts/operations';\nimport { DeleteConfirmationModal } from '../Modal/DeleteConfirmationModal';\n\nimport { ListItem, ListItemAvatar, Avatar, ListItemText } from '@mui/material';\nimport { AccountCircle, PersonRemove } from '@mui/icons-material';\nimport { StyledButton, StyledTypography } from './ContactItem.styled';\nimport { styles } from './ContactItem.styled';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const nodeRef = useRef(null);\n  const [isShowContact, setIsShowContact] = useState(true);\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n  const handleDelete = contactId => {\n    dispatch(deleteContact(contactId));\n    setIsShowContact(false);\n    setIsOpenModal(false);\n  };\n\n  return (\n    <>\n      <Transition\n        key={contact._id}\n        in={isShowContact}\n        appear={true}\n        timeout={300}\n        nodeRef={nodeRef}\n      >\n        {state => (\n          <ListItem\n            ref={nodeRef}\n            style={{\n              padding: '0 0 8px',\n              ...styles.container,\n              ...(state === 'entered'\n                ? { ...styles.entered }\n                : { ...styles.exited }),\n            }}\n          >\n            <ListItemAvatar>\n              <Avatar sx={{ bgcolor: '#3f51b5' }}>\n                <AccountCircle />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText>\n              <StyledTypography\n                fontSize=\"18px\"\n                color=\"white\"\n                textshadow=\"2px 2px 4px black\"\n              >\n                {`${contact.name} : ${contact.phone}`}\n              </StyledTypography>\n            </ListItemText>\n            {\n              <StyledButton\n                variant=\"outlined\"\n                startIcon={<PersonRemove />}\n                type=\"button\"\n                name=\"delete\"\n                onClick={() => {\n                  setIsOpenModal(true);\n                  // handleDelete(contact._id);\n                }}\n              >\n                Delete\n              </StyledButton>\n            }\n            <DeleteConfirmationModal\n              open={isOpenModal}\n              onClose={() => setIsOpenModal(false)}\n              onConfirm={() => handleDelete(contact._id)}\n            />\n          </ListItem>\n        )}\n      </Transition>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Message = styled.div`\n  padding: 0 20px 20px;\n  text-align: center;\n\n  font-size: 16px;\n  font-weight: 600;\n  color: orange;\n`;\n","\nimport { useSelector } from 'react-redux';\n\nimport { getContacts, getFilter, getIsLoading } from '../../redux/contacts/selectors';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\n\nimport { Message} from './ContactList.styled';\nimport { List } from '@mui/material';\n\nconst filterContacts = (items, filter) => {\n  return items.filter(contacts =>\n    contacts.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nexport const ContactList = () => {\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getIsLoading);\n\n  const visibleContacts = filterContacts(contacts, filter);\n\n  return (\n    <>\n      {!isLoading && contacts.length === 0 ? (\n        <Message>You do not have contacts 😯</Message>\n      ) : (\n        <List sx={{ padding: '20px 20px 12px' }}>\n          {visibleContacts.map(contact => (\n            <ContactItem key={contact._id} contact={contact} />\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { TextField } from '@mui/material';\n\nexport const ContainerFilter = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n\n  padding: 20px;\n`;\n\nexport const StyledTextField = styled(TextField)`\n  & input {\n    font-size: 20px;\n    color: white;\n  }\n\n  & label {\n    font-size: 20px;\n    color: white;\n  }\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/selectors';\nimport { setFilter } from '../../redux/contacts/contactsSlice';\nimport { Typography } from '@mui/material';\nimport {\n  ContainerFilter,\n  StyledTextField\n} from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  return (\n    <ContainerFilter>\n      <Typography variant=\"h5\" fontWeight=\"400\" color=\"white\">\n        Find contacts by name\n      </Typography>\n      <StyledTextField\n        fullWidth\n        type=\"text\"\n        label=\"Enter Name\"\n        variant=\"filled\"\n        value={filter}\n        onChange={event => dispatch(setFilter(event.target.value))}\n      />\n    </ContainerFilter>\n  );\n};\n","import { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Transition } from 'react-transition-group';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { getIsLoading } from 'redux/contacts/selectors';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '444px',\n    border: '1px solid rgb(236, 236, 236)',\n    borderRadius: '10px',\n    boxShadow: 'rgba(0, 0, 0, 0.45) 0px 25px 20px -20px',\n    backdropFilter: 'blur(10px)',\n    marginBottom: '20px',\n    opacity: 0,\n    transform: 'translateY(-20px)',\n  },\n  entered: {\n    opacity: 1,\n    transform: 'translateY(0)',\n    transition: 'opacity 300ms ease-out, transform 300ms ease-out',\n  },\n  message: {\n    padding: '0 20px 20px',\n    textAlign: 'center',\n    fontSize: '16px',\n    fontWeight: '600',\n    color: 'orange',\n  },\n  section: {\n    minHeight: '60vh',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: '40px',\n  },\n};\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const nodeRef = useRef(null);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <section style={styles.section}>\n      <Transition in={true} appear={true} timeout={300} nodeRef={nodeRef}>\n        {state => (\n          <div\n            ref={nodeRef}\n            style={{\n              ...styles.container,\n              ...(state === 'entered' && { ...styles.entered }),\n            }}\n          >\n            <ContactForm />\n            <Filter />\n            <ContactList />\n            {isLoading && (\n              <div style={styles.message}>Request in progress...👌</div>\n            )}\n          </div>\n        )}\n      </Transition>\n    </section>\n  );\n};\n\nexport default Contacts;\n"],"names":["getContacts","state","contacts","items","getFilter","filter","getIsLoading","isLoading","AddContactForm","styled","Container","StyledTextField","TextField","StyledButton","Button","ContactForm","dispatch","useDispatch","useSelector","onSubmit","event","preventDefault","form","currentTarget","name","elements","value","phone","tel","loweredCase","toLowerCase","trim","some","cont","alert","length","addContact","reset","Typography","variant","fontWeight","color","fullWidth","type","label","inputProps","inputMode","pattern","title","startIcon","AddIcCall","DeleteConfirmationModal","open","onClose","onConfirm","Dialog","sx","width","maxWidth","backgroundColor","border","borderRadius","padding","boxShadow","backdropFilter","DialogTitle","id","fontSize","DialogContent","DialogContentText","textShadow","DialogActions","onClick","transform","autoFocus","StyledTypography","baseStyles","transition","styles","container","opacity","entered","exited","ContactItem","contact","nodeRef","useRef","useState","isShowContact","setIsShowContact","isOpenModal","setIsOpenModal","Transition","in","appear","timeout","ListItem","ref","style","ListItemAvatar","Avatar","bgcolor","AccountCircle","ListItemText","textshadow","PersonRemove","contactId","_id","deleteContact","Message","ContactList","visibleContacts","includes","filterContacts","List","map","ContainerFilter","Filter","onChange","setFilter","target","display","flexDirection","marginBottom","message","textAlign","section","minHeight","alignItems","justifyContent","marginTop","useEffect","fetchContacts"],"sourceRoot":""}